version: "3.8"

services:
  postgres:
    image: postgres:16
    container_name: postgres16
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}      # DB 사용자
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pwd}   # DB 비밀번호
      POSTGRES_DB: ${POSTGRES_DB:-stock}             # DB 이름
      POSTGRES_HOST_AUTH_METHOD: trust               # 개발 편의(운영 비권장)
    ports:
      - "5432:5432"

  kafka:
    image: apache/kafka:3.8.0
    container_name: local-kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
    environment:
      # ✅ KRaft(컨트롤러+브로커) 단일 노드 구성
      KAFKA_PROCESS_ROLES: controller,broker            # 이 프로세스가 맡을 역할
      KAFKA_NODE_ID: "1"                                # 노드 ID(임의의 정수)
      KAFKA_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"   # 실제 리스너
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092"  # 외부에서 접근 주소
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"     # 컨트롤러 리스너 이름
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@localhost:9093" # 컨트롤러 쿼럼(단일 노드)

      # 개발 편의 설정(싱글 노드라 복제팩터 1)
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "0"

    # ⚠️ 공식 이미지는 KRaft 스토리지 포맷을 먼저 해야 함
    command: >
      bash -c "
      if [ ! -f /var/lib/kafka/data/meta.properties ]; then
        export KAFKA_CLUSTER_ID=$$(/opt/kafka/bin/kafka-storage.sh random-uuid) &&
        /opt/kafka/bin/kafka-storage.sh format
          -t $$KAFKA_CLUSTER_ID
          -c /opt/kafka/config/kraft/server.properties ;
      fi ;
      /opt/kafka/bin/kafka-server-start.sh /opt/kafka/config/kraft/server.properties
      "
