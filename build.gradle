plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'
sourceCompatibility = '21'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.postgresql:postgresql:42.7.3'

    // Flyway
    implementation 'org.flywaydb:flyway-core:10.21.0'
	implementation 'org.flywaydb:flyway-database-postgresql:10.21.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('composeUp', Exec) {
    // DB 컨테이너 띄움 + healthcheck 완료까지 기다림
    commandLine 'docker', 'compose', 'up', '-d', '--wait', '--wait-timeout', '60'
}

tasks.register('composeDown', Exec) {
    // 종료 시 컨테이너 내리고 싶으면 사용
    commandLine 'docker', 'compose', 'down'
}

bootRun {
    dependsOn 'composeUp'       // bootRun 전에 DB 자동 실행
    // finalizedBy 'composeDown' // bootRun 끝날 때 DB도 내리고 싶으면 주석 해제
}